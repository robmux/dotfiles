"" Source your .vimrc
"source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5
set number relativenumber
" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

set clipboard+=unnamed
set clipboard+=ideaput

nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \r :action IdeaVim.ReloadVimRc.reload<CR>

let mapleader=" "

""" IdeaVim plugins
Plug 'easymotion/vim-easymotion'
set easymotion
map <leader>F <Plug>(easymotion-s)
map <leader>f <Plug>(easymotion-f)
" the easymotion-s command is used to search for occurrences of a word, while the easymotion-f command " is used to search for occurrences of a character or sequence of characters."

Plug 'preservim/nerdtree'
set NERDTree
nnoremap <leader>tt :NERDTree<CR>
" Remaps for JetBrains IDEs"
nnoremap <c-z> :action ToggleDistractionFreeMode<CR>
nnoremap <c-t> :action ActivateTerminalToolWindow<CR>
nnoremap <leader>t :action Terminal.OpenInTerminal<CR>

nnoremap <c-\> :action SplitVertically<CR>
nnoremap <c--> :action SplitHorizontally<CR>
nnoremap <c-=> :action Unsplit<CR>
nnoremap <c-m> :action MoveEditorToOppositeTabGroup<CR>

sethandler <c-j> a:vim
sethandler <c-k> a:vim
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k

nnoremap <TAB> :action PreviousTab<CR>
nnoremap <s-TAB> :action NextTab<CR>

" use :actionlist to search the action to remap"
nnoremap <leader>sf :action FrameSwitchAction<CR>

nnoremap <Leader>en :action EditSourceInNewWindow<CR>
nnoremap <Leader>n :action NextWindow<CR>

nnoremap <Leader>q :action CloseContent<CR>
nnoremap <Leader>qa :action CloseAllEditors<CR>

set ideajoin
set idearefactormode=keep

vnoremap < <gv
vnoremap > >gv

nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>

nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap <leader>zc :action CollapseAllRegions<CR>
nnoremap <leader>zo :action ExpandAllRegions<CR>

nnoremap <leader>c :action CommentByLineComment<CR>
nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>

nnoremap <Leader>=  :action ReformatCode<CR>
nnoremap <leader>o :action OptimizeImports<CR>

nnoremap <c-r> :action RecentFiles<CR>
nnoremap <leader>l :action RecentLocations<CR>
nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>

nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>

nnoremap <c-/> :action FindInPath<CR>
nnoremap <c-a> :action GotoAction<CR>
nnoremap <c-f> :action GotoFile<CR>
nnoremap <leader>u :action FindUsages<CR>


nnoremap <leader>s :action GotoRelated<CR>
nnoremap <leader>h :action CallHierarchy<CR>
nnoremap <leader>b :action ShowNavBar<CR>

nnoremap <c-s> :action FileStructurePopup<CR>
nnoremap <c-o> :action GotoSymbol<CR>
nnoremap <c-i> :action GotoImplementation<CR>

nnoremap gc :action GotoClass<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotToDeclaration<CR>
nnoremap gp :action GotToSuperMethod<CR>
nnoremap gt :action GotoTest<CR>

nnoremap gb :action Back<CR>
nnoremap gf :action Forward<CR>

nnoremap <c-p> :action JumpToLastWindow<CR>
nnoremap <c-x> :action HideAllWindows<CR>

nnoremap ,r :action ContextRun<CR>
nnoremap ,c :action RunClass<CR>

nnoremap ,f :action ChooseRunConfiguration<CR>
" you can reach the ActivateDebugConfiguration by holding SHIFT when using ActivateRunConfiguration defined below"
nnoremap ,t :action ActivateRunToolWindow<CR>
nnoremap ,d :action ActivateDebugConfiguration<CR>
nnoremap ,u :action Rerun<CR>

nnoremap ,ft :action RerunFailedTests<CR>

nnoremap ,b :action ToggleLineBreakpoint<CR>
nnoremap ,cd :action ContextDebug<CR>
nnoremap ,n :action ActivateDebugToolWindow<CR>
" remaps end"


" cs: To change the surroundings.
""  ds: To delete the surroundings.
""  ys: To add surroundings.
""  S: To surround the currently selected text.
" ysiw<b>: Surround the current word with <b> tag (iw means inner word.)"
Plug 'tpope/vim-surround'

""" Multiple cursors plugins
" Basic commands
"   - mc: start multiple cursors
"   - mc: next match
"   - mp: previous match
"   - mx: skip next match
Plug 'terryma/vim-multiple-cursors'
map mc <A-n>
map mx <A-x>
map mp <A-p>

" Mac OS X"
map <D-n> mc
map <D-x> mx
map <D-p> mp


"""Usage
"This plugin adds three main commands in normal mode

"gcc: Comment current line.
"gc + motion: Comment using the motion.
"gc: Comment selected text."
Plug 'tpope/vim-commentary'

"""Usage
"This plugin adds three main commands in normal mode

"cx + motion: Select the first bloc to swap or select the second, and perform the swap.
"cxx : Similar to cx but for the current line.
"X: Similar to cx but for the select text.
"cxc: Cancel pending exchange.
Plug 'tommcdo/vim-exchange'

Plug 'michaeljsmith/vim-indent-object'

"As you copy a piece of text (y command), the text gets highlighted for the set duration.
Plug 'machakann/vim-highlightedyank'

Plug 'nvim-lua/plenary.nvim'
" Plug 'nvim-telescope/telescope.nvim', { 'tag': '0.1.1' }


" nmap <C-P> :Telescope find_files hidden=true <CR>
" nnoremap <silent> <C-P> :lua require'telescope.builtin'.git_files{ hidden=true, cwd=GitDir() or vim.loop.cwd() }<CR>
" nmap <C-T> :Telescope live_grep <CR>


" or                                , { 'branch': '0.1.x' }

"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)


" Find more examples here: https://jb.gg/share-ideavimrc